package com.pxg.app.core.mapper.appmapper;

import com.pxg.app.core.model.km.KettleFileList;
import com.pxg.app.core.modelutil.KettleFileListAll;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface KettleFileListMapper {


    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table km.kettle_file_list
     * @mbg.generated Sun Sep 01 17:12:23 CST 2019
     */
    int insert(KettleFileList record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table km.kettle_file_list
     * @mbg.generated Sun Sep 01 17:12:23 CST 2019
     */
    int insertSelective(KettleFileList record);

    Long count(KettleFileList record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table km.kettle_file_list
     * @mbg.generated Sun Sep 01 17:12:23 CST 2019
     */
    KettleFileList selectByPrimaryKey(Integer id);

    List<KettleFileList> selectSelective(KettleFileList record);

    List<KettleFileListAll> selectAll(@Param("status") Integer status);

    int updateByPrimaryKeySelective(KettleFileList record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table km.kettle_file_list
     * @mbg.generated Sun Sep 01 17:12:23 CST 2019
     */
    int updateByPrimaryKey(KettleFileList record);


    public List<KettleFileListAll> selectAllByPage(@Param("pageId") int pageId,
                                                   @Param("pageCount") int pageCount,
                                                   @Param("status") int status);

    public List<KettleFileListAll> selectAllByPageAndName(@Param("pageId") int pageId,
                                                          @Param("pageCount") int pageCount,
                                                          @Param("status") int status,
                                                          @Param("name") String name);

    /**
     * 通过name 模糊匹配
     * @param name
     * @return
     */
    long counta(@Param("name") String name);
}